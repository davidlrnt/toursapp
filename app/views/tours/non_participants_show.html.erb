<div class="tourImage">

<div class="tourDescription">
    <h1><%= @tour.title %></h1>
    <p><%= @tour.description %></p>
    <h4>Tour score:</h4> <%= @tour.average_score %>,

    <h4>tags:</h4>
  <% @tour.tags.each do |tag| %>
  <%= tag.name %>,
  <% end %>

  <% if @tour.cities.count > 1 %>
    <h4>cities:</h4>
    <% else %>
    <h4>city:</h4>
    <% end %>
  <% @tour.cities.each do |city| %>
  <%= city.accent %>
  <% end %>

  </div>
  </div>
</div>



<% if @tour.images.first %>
<style>
    .tourImage{
     background: linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url(<%= @tour.images.first.image_url %>);
      background-color: black;
      background-size: cover;
      background-repeat: no-repeat;
      background-position: 50% 50%;
      display: inline-block;
    }

    .thumb {
        background: url("http://ih1.redbubble.net/image.38250018.7772/flat,550x550,075,f.u1.jpg");
        width: 100px;
        height: 100px;
        border-radius: 50%;
        background-position: center center;
        background-size: cover;
        background-repeat: no-repeat;
    }
    </style>
<% end %>




   <div class="tourImageFloat">      
      <div class="userTourAvatar">
  <% if @tour.guide.images.count >= 1 %>
  <%=image_tag("#{@tour.guide.images.last.image_url}", size:"100x100")%>
  <% elsif @tour.guide.images.empty? %>
        <div class="thumb" title="Portrait: 400x800"></div>
    <% else %>
    <h2><%= @tour.guide.name %></h2>
    <%= link_to "Edit Profile", edit_user_path %><br>
  <% end %>
      <h3><%= link_to @tour.guide.name, @tour.guide %></h3>

    <% if user_signed_in? %>
      <%=link_to "Message Me", new_conversation_path, class: "linkBtn"  %>
      <% if !current_user.friends.include?(@tour.guide) && !current_user.pending_friends.include?(@tour.guide)  %>
      <%= link_to "Add Friend", friendships_path(:friend_id => @tour.guide), class: "linkBtn", :method => :post%>
      <% end %>
    <% end %>

      </div>
      <div id="map" class="map"></div>

    </div>





</div>
</div>




<div class="tourBodyContainer">
<p id="notice"><%= notice %></p>

<% @tour.reviews.each do |review| %>
  <div class="grayBoxBG">
  <h3>Rated: <%= review.rating %>/5</h3>
  <%= review.content %>
  </div>
<% end %>
 <% if user_signed_in? %>
   <%= form_tag("/participate") %>
   <%= hidden_field_tag(:user_id, current_user.id) %>
   <%= hidden_field_tag(:id, @tour.id) %>
   <%= submit_tag("Participate", class: "linkBtn") %>
 <% else %>
   <%= link_to "Log In", new_user_session_path %>
   or
   <%= link_to "Sign Up", new_user_registration_path %>
   To Participate
 <% end %><br>

</div>

<% @locationsarr = [] %>
  <% @tour.locations.each do |location| %>
  <% @locationsarr << ["<a href=""></a><br><br>", location.lat.to_f,location.lng.to_f] %>
  <% end %>
</div>

<script src="http://jawj.github.com/OverlappingMarkerSpiderfier/bin/oms.min.js"></script>

  <script>
    // Define your locations: HTML content for the info window, latitude, longitude
    var locations = <%= raw @locationsarr.to_json %>;
    var iconURLPrefix = 'http://maps.google.com/mapfiles/ms/icons/';

    var icons = [
      iconURLPrefix + 'red-dot.png',
      iconURLPrefix + 'green-dot.png',
      iconURLPrefix + 'blue-dot.png',
      iconURLPrefix + 'orange-dot.png',
      iconURLPrefix + 'purple-dot.png',
      iconURLPrefix + 'pink-dot.png',
      iconURLPrefix + 'yellow-dot.png'
    ]
    var iconsLength = icons.length;

    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 13,
      center: new google.maps.LatLng(40.7412,-73.9973),
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      mapTypeControl: false,
      streetViewControl: false,
      panControl: false,
      zoomControlOptions: {
         position: google.maps.ControlPosition.LEFT_BOTTOM
      }
    });

    var oms = new OverlappingMarkerSpiderfier(map);

    var infowindow = new google.maps.InfoWindow({
      maxWidth: 160
    });

    var markers = new Array();

    var iconCounter = 0;

    // Add the markers and infowindows to the map
    for (var i = 0; i < locations.length; i++) {
      var marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations[i][1], locations[i][2]),
        map: map,
        icon: icons[iconCounter]
      });

      markers.push(marker);
      oms.addMarker(marker);

      google.maps.event.addListener(marker, 'mouseover', (function(marker, i) {
        return function() {
          infowindow.setContent(locations[i][0]);
          infowindow.open(map, marker);
        }
      })(marker, i));

      iconCounter++;
      // We only have a limited number of possible icon colors, so we may have to restart the counter
      if(iconCounter >= iconsLength) {
        iconCounter = 0;
      }
    }

    function autoCenter() {
      //  Create a new viewpoint bound
      var bounds = new google.maps.LatLngBounds();
      //  Go through each...
      for (var i = 0; i < markers.length; i++) {
        bounds.extend(markers[i].position);
      }
      //  Fit these bounds to the map
      map.fitBounds(bounds);
    }
    autoCenter();
  </script>


